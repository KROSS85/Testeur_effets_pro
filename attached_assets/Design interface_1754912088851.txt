<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Visual Effects Test Studio - Professional VFX Testing</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;4JUdGzvrMFDWrUUwY3toJATSeNwjn54LkCnKBPRzDuhzi5vSepHfUckJNxRL2gjkNrSqtCoRUrEDAgRwsQvVCjZbRyFTLRNyDmT1a1boZVstylesheet">
    <style>
        :root {
            --primary: #00d4ff;
            --secondary: #0066ff;
            --accent: #ff00ff;
            --dark: #0a0a1a;
            --darker: #050510;
            --light: #ffffff;
            --gray: #8892b0;
            --success: #00ff88;
            --warning: #ffaa00;
            --danger: #ff0066;
            --info: #00d4ff;
            --purple: #8b5cf6;
            --pink: #ec4899;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Montserrat', sans-serif;
        }

        body {
            background: linear-gradient(135deg, var(--darker) 0%, var(--dark) 100%);
            color: var(--light);
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        /* Animated Background */
        .bg-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }

        .bg-grid {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                linear-gradient(rgba(0, 212, 255, 0.03) 1px, transparent 1px),
                linear-gradient(90deg, rgba(0, 212, 255, 0.03) 1px, transparent 1px);
            background-size: 50px 50px;
            animation: grid-move 20s linear infinite;
        }

        @keyframes grid-move {
            0% { transform: translate(0, 0); }
            100% { transform: translate(50px, 50px); }
        }

        .bg-particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .particle {
            position: absolute;
            background: var(--primary);
            border-radius: 50%;
            opacity: 0.1;
            animation: float 20s infinite linear;
        }

        @keyframes float {
            0% { transform: translateY(0) translateX(0); opacity: 0; }
            10% { opacity: 0.2; }
            90% { opacity: 0.2; }
            100% { transform: translateY(-100vh) translateX(100px); opacity: 0; }
        }

        /* Header */
        header {
            background: rgba(10, 10, 26, 0.8);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(0, 212, 255, 0.2);
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .logo-icon {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, var(--primary), var(--accent));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            box-shadow: 0 0 30px rgba(0, 212, 255, 0.5);
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { box-shadow: 0 0 30px rgba(0, 212, 255, 0.5); }
            50% { box-shadow: 0 0 50px rgba(0, 212, 255, 0.8); }
        }

        .logo h1 {
            font-family: 'Orbitron', sans-serif;
            font-weight: 900;
            font-size: 24px;
            background: linear-gradient(90deg, var(--primary), var(--accent));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            letter-spacing: 1px;
        }

        .logo span {
            font-size: 12px;
            color: var(--gray);
            font-weight: 400;
            margin-top: -5px;
        }

        .header-actions {
            display: flex;
            gap: 15px;
        }

        .header-btn {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--light);
            padding: 10px 15px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            font-weight: 600;
        }

        .header-btn:hover {
            background: rgba(255, 255, 255, 0.1);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 212, 255, 0.3);
        }

        .header-btn.active {
            background: linear-gradient(135deg, var(--primary), var(--accent));
            border: none;
        }

        /* Main Container */
        .main-container {
            display: flex;
            height: calc(100vh - 80px);
            padding: 20px;
            gap: 20px;
        }

        /* Left Panel - Effects Library */
        .effects-panel {
            flex: 0 0 280px;
            background: rgba(10, 10, 26, 0.6);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            border: 1px solid rgba(0, 212, 255, 0.2);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .panel-header {
            background: rgba(0, 212, 255, 0.1);
            padding: 15px 20px;
            border-bottom: 1px solid rgba(0, 212, 255, 0.2);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .panel-title {
            font-family: 'Rajdhani', sans-serif;
            font-weight: 700;
            font-size: 18px;
            color: var(--primary);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .panel-actions {
            display: flex;
            gap: 8px;
        }

        .panel-btn {
            background: rgba(255, 255, 255, 0.1);
            border: none;
            color: var(--light);
            width: 32px;
            height: 32px;
            border-radius: 6px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .panel-btn:hover {
            background: rgba(0, 212, 255, 0.2);
            transform: scale(1.1);
        }

        .effects-search {
            padding: 15px 20px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .search-box {
            position: relative;
        }

        .search-box input {
            width: 100%;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--light);
            padding: 10px 15px 10px 40px;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .search-box input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 2px rgba(0, 212, 255, 0.2);
        }

        .search-box i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
        }

        .effects-list {
            flex: 1;
            overflow-y: auto;
            padding: 10px;
        }

        .effect-category {
            margin-bottom: 20px;
        }

        .category-title {
            font-family: 'Rajdhani', sans-serif;
            font-weight: 600;
            font-size: 14px;
            color: var(--gray);
            margin-bottom: 10px;
            padding: 0 10px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .effect-item {
            background: rgba(255, 255, 255, 0.03);
            border: 1px solid rgba(255, 255, 255, 0.05);
            border-radius: 8px;
            padding: 12px;
            margin-bottom: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .effect-item:hover {
            background: rgba(0, 212, 255, 0.1);
            border-color: var(--primary);
            transform: translateX(5px);
        }

        .effect-item.active {
            background: rgba(0, 212, 255, 0.2);
            border-color: var(--primary);
        }

        .effect-icon {
            width: 40px;
            height: 40px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
        }

        .effect-info {
            flex: 1;
        }

        .effect-name {
            font-weight: 600;
            font-size: 14px;
            margin-bottom: 2px;
        }

        .effect-type {
            font-size: 12px;
            color: var(--gray);
        }

        .effect-status {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: var(--success);
        }

        /* Center Panel - Canvas & Controls */
        .canvas-panel {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .canvas-container {
            flex: 1;
            background: rgba(10, 10, 26, 0.6);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            border: 1px solid rgba(0, 212, 255, 0.2);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .canvas-header {
            background: rgba(0, 212, 255, 0.1);
            padding: 15px 20px;
            border-bottom: 1px solid rgba(0, 212, 255, 0.2);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .canvas-info {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .canvas-title {
            font-family: 'Rajdhani', sans-serif;
            font-weight: 700;
            font-size: 18px;
            color: var(--primary);
        }

        .canvas-metrics {
            display: flex;
            gap: 15px;
        }

        .metric-item {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 14px;
        }

        .metric-item i {
            color: var(--gray);
        }

        .metric-value {
            font-weight: 600;
            color: var(--light);
        }

        .canvas-actions {
            display: flex;
            gap: 10px;
        }

        .canvas-wrapper {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
            position: relative;
            background: radial-gradient(circle at center, rgba(0, 212, 255, 0.05) 0%, transparent 70%);
        }

        #effectCanvas {
            background: rgba(0, 0, 0, 0.5);
            border-radius: 8px;
            box-shadow: 0 0 50px rgba(0, 212, 255, 0.3);
            max-width: 100%;
            max-height: 100%;
        }

        .canvas-overlay {
            position: absolute;
            top: 20px;
            right: 20px;
            background: rgba(10, 10, 26, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 8px;
            padding: 10px 15px;
            display: flex;
            gap: 15px;
            font-size: 14px;
        }

        .overlay-item {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .overlay-item i {
            color: var(--gray);
        }

        .controls-panel {
            background: rgba(10, 10, 26, 0.6);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            border: 1px solid rgba(0, 212, 255, 0.2);
            padding: 20px;
        }

        .controls-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .controls-title {
            font-family: 'Rajdhani', sans-serif;
            font-weight: 700;
            font-size: 18px;
            color: var(--primary);
        }

        .timeline-controls {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 20px;
        }

        .play-btn {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, var(--primary), var(--accent));
            border: none;
            border-radius: 50%;
            color: white;
            font-size: 20px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .play-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 0 20px rgba(0, 212, 255, 0.5);
        }

        .timeline {
            flex: 1;
            height: 6px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 3px;
            position: relative;
            cursor: pointer;
        }

        .timeline-progress {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 30%;
            background: linear-gradient(90deg, var(--primary), var(--accent));
            border-radius: 3px;
        }

        .timeline-handle {
            position: absolute;
            top: 50%;
            left: 30%;
            transform: translate(-50%, -50%);
            width: 16px;
            height: 16px;
            background: var(--light);
            border-radius: 50%;
            cursor: grab;
            box-shadow: 0 0 10px rgba(0, 212, 255, 0.5);
        }

        .time-display {
            font-family: 'Rajdhani', sans-serif;
            font-weight: 600;
            font-size: 16px;
            color: var(--light);
            min-width: 80px;
            text-align: center;
        }

        .playback-controls {
            display: flex;
            gap: 10px;
        }

        .control-btn {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: var(--light);
            width: 40px;
            height: 40px;
            border-radius: 8px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .control-btn:hover {
            background: rgba(0, 212, 255, 0.2);
            transform: scale(1.1);
        }

        /* Right Panel - Parameters & Metrics */
        .params-panel {
            flex: 0 0 320px;
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .params-container {
            background: rgba(10, 10, 26, 0.6);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            border: 1px solid rgba(0, 212, 255, 0.2);
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .params-content {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
        }

        .param-group {
            margin-bottom: 25px;
        }

        .param-group-title {
            font-family: 'Rajdhani', sans-serif;
            font-weight: 600;
            font-size: 16px;
            color: var(--primary);
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .param-item {
            margin-bottom: 15px;
        }

        .param-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
        }

        .param-name {
            font-size: 14px;
            font-weight: 500;
        }

        .param-value {
            font-family: 'Rajdhani', sans-serif;
            font-weight: 600;
            font-size: 14px;
            color: var(--primary);
        }

        .param-slider {
            width: 100%;
            height: 6px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 3px;
            outline: none;
            -webkit-appearance: none;
            cursor: pointer;
        }

        .param-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 16px;
            height: 16px;
            background: var(--primary);
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 0 10px rgba(0, 212, 255, 0.5);
        }

        .param-slider::-moz-range-thumb {
            width: 16px;
            height: 16px;
            background: var(--primary);
            border-radius: 50%;
            cursor: pointer;
            box-shadow: 0 0 10px rgba(0, 212, 255, 0.5);
        }

        .param-options {
            display: flex;
            gap: 8px;
            flex-wrap: wrap;
        }

        .param-option {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--light);
            padding: 6px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.3s ease;
        }

        .param-option:hover {
            background: rgba(0, 212, 255, 0.2);
        }

        .param-option.active {
            background: var(--primary);
            border-color: var(--primary);
        }

        .metrics-container {
            background: rgba(10, 10, 26, 0.6);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            border: 1px solid rgba(0, 212, 255, 0.2);
            padding: 20px;
        }

        .metrics-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin-top: 15px;
        }

        .metric-card {
            background: rgba(255, 255, 255, 0.03);
            border: 1px solid rgba(255, 255, 255, 0.05);
            border-radius: 8px;
            padding: 15px;
            transition: all 0.3s ease;
        }

        .metric-card:hover {
            background: rgba(0, 212, 255, 0.1);
            border-color: var(--primary);
        }

        .metric-card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .metric-card-title {
            font-size: 12px;
            color: var(--gray);
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .metric-card-icon {
            width: 24px;
            height: 24px;
            background: rgba(0, 212, 255, 0.2);
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
        }

        .metric-card-value {
            font-family: 'Rajdhani', sans-serif;
            font-weight: 700;
            font-size: 24px;
            color: var(--light);
        }

        .metric-card-unit {
            font-size: 14px;
            color: var(--gray);
            margin-left: 5px;
        }

        .metric-card-trend {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 12px;
            margin-top: 5px;
        }

        .trend-up {
            color: var(--success);
        }

        .trend-down {
            color: var(--danger);
        }

        /* Export Panel */
        .export-panel {
            background: rgba(10, 10, 26, 0.6);
            backdrop-filter: blur(20px);
            border-radius: 16px;
            border: 1px solid rgba(0, 212, 255, 0.2);
            padding: 20px;
        }

        .export-options {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
            margin-top: 15px;
        }

        .export-btn {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--light);
            padding: 12px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 8px;
        }

        .export-btn:hover {
            background: rgba(0, 212, 255, 0.2);
            border-color: var(--primary);
            transform: translateY(-2px);
        }

        .export-btn i {
            font-size: 24px;
            color: var(--primary);
        }

        .export-btn span {
            font-size: 12px;
            font-weight: 600;
        }

        /* Responsive */
        @media (max-width: 1400px) {
            .params-panel {
                flex: 0 0 280px;
            }
        }

        @media (max-width: 1200px) {
            .main-container {
                flex-direction: column;
            }
            
            .effects-panel, .params-panel {
                flex: none;
                width: 100%;
            }
        }

        @media (max-width: 768px) {
            header {
                padding: 10px 15px;
            }
            
            .logo h1 {
                font-size: 18px;
            }
            
            .main-container {
                padding: 10px;
                gap: 10px;
            }
            
            .metrics-grid {
                grid-template-columns: 1fr;
            }
            
            .export-options {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Animated Background -->
    <div class="bg-animation">
        <div class="bg-grid"></div>
        <div class="bg-particles" id="particles"></div>
    </div>

    <!-- Header -->
    <header>
        <div class="logo">
            <div class="logo-icon">
                <i class="fas fa-magic"></i>
            </div>
            <div>
                <h1>Visual Effects Test Studio</h1>
                <span>Professional VFX Testing & Optimization</span>
            </div>
        </div>
        <div class="header-actions">
            <button class="header-btn">
                <i class="fas fa-cog"></i> Settings
            </button>
            <button class="header-btn">
                <i class="fas fa-save"></i> Save Project
            </button>
            <button class="header-btn active">
                <i class="fas fa-rocket"></i> Export
            </button>
        </div>
    </header>

    <!-- Main Container -->
    <div class="main-container">
        <!-- Left Panel - Effects Library -->
        <div class="effects-panel">
            <div class="panel-header">
                <div class="panel-title">
                    <i class="fas fa-layer-group"></i> Effects Library
                </div>
                <div class="panel-actions">
                    <button class="panel-btn">
                        <i class="fas fa-plus"></i>
                    </button>
                    <button class="panel-btn">
                        <i class="fas fa-filter"></i>
                    </button>
                </div>
            </div>
            
            <div class="effects-search">
                <div class="search-box">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="Search effects...">
                </div>
            </div>
            
            <div class="effects-list">
                <div class="effect-category">
                    <div class="category-title">Particle Effects</div>
                    <div class="effect-item active">
                        <div class="effect-icon">
                            <i class="fas fa-star"></i>
                        </div>
                        <div class="effect-info">
                            <div class="effect-name">DNA Particles</div>
                            <div class="effect-type">Organic Animation</div>
                        </div>
                        <div class="effect-status"></div>
                    </div>
                    <div class="effect-item">
                        <div class="effect-icon">
                            <i class="fas fa-snowflake"></i>
                        </div>
                        <div class="effect-info">
                            <div class="effect-name">Snow Storm</div>
                            <div class="effect-type">Weather Simulation</div>
                        </div>
                        <div class="effect-status"></div>
                    </div>
                    <div class="effect-item">
                        <div class="effect-icon">
                            <i class="fas fa-fire"></i>
                        </div>
                        <div class="effect-info">
                            <div class="effect-name">Fire Burst</div>
                            <div class="effect-type">Elemental Effect</div>
                        </div>
                        <div class="effect-status"></div>
                    </div>
                </div>
                
                <div class="effect-category">
                    <div class="category-title">Text Effects</div>
                    <div class="effect-item">
                        <div class="effect-icon">
                            <i class="fas fa-font"></i>
                        </div>
                        <div class="effect-info">
                            <div class="effect-name">Glitch Text</div>
                            <div class="effect-type">Digital Distortion</div>
                        </div>
                        <div class="effect-status"></div>
                    </div>
                    <div class="effect-item">
                        <div class="effect-icon">
                            <i class="fas fa-wave-square"></i>
                        </div>
                        <div class="effect-info">
                            <div class="effect-name">Wave Text</div>
                            <div class="effect-type">Fluid Animation</div>
                        </div>
                        <div class="effect-status"></div>
                    </div>
                </div>
                
                <div class="effect-category">
                    <div class="category-title">Transition Effects</div>
                    <div class="effect-item">
                        <div class="effect-icon">
                            <i class="fas fa-exchange-alt"></i>
                        </div>
                        <div class="effect-info">
                            <div class="effect-name">Morph Transition</div>
                            <div class="effect-type">Shape Shifting</div>
                        </div>
                        <div class="effect-status"></div>
                    </div>
                    <div class="effect-item">
                        <div class="effect-icon">
                            <i class="fas fa-expand-arrows-alt"></i>
                        </div>
                        <div class="effect-info">
                            <div class="effect-name">Zoom Burst</div>
                            <div class="effect-type">Dynamic Scale</div>
                        </div>
                        <div class="effect-status"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Center Panel - Canvas & Controls -->
        <div class="canvas-panel">
            <div class="canvas-container">
                <div class="canvas-header">
                    <div class="canvas-info">
                        <div class="canvas-title">DNA Particles Effect</div>
                        <div class="canvas-metrics">
                            <div class="metric-item">
                                <i class="fas fa-expand"></i>
                                <span class="metric-value">1920x1080</span>
                            </div>
                            <div class="metric-item">
                                <i class="fas fa-tachometer-alt"></i>
                                <span class="metric-value">60 FPS</span>
                            </div>
                            <div class="metric-item">
                                <i class="fas fa-memory"></i>
                                <span class="metric-value">45 MB</span>
                            </div>
                        </div>
                    </div>
                    <div class="canvas-actions">
                        <button class="panel-btn">
                            <i class="fas fa-expand"></i>
                        </button>
                        <button class="panel-btn">
                            <i class="fas fa-cog"></i>
                        </button>
                    </div>
                </div>
                
                <div class="canvas-wrapper">
                    <canvas id="effectCanvas" width="800" height="450"></canvas>
                    <div class="canvas-overlay">
                        <div class="overlay-item">
                            <i class="fas fa-clock"></i>
                            <span>00:15</span>
                        </div>
                        <div class="overlay-item">
                            <i class="fas fa-layer-group"></i>
                            <span>12 Layers</span>
                        </div>
                        <div class="overlay-item">
                            <i class="fas fa-cube"></i>
                            <span>3D Mode</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="controls-panel">
                <div class="controls-header">
                    <div class="controls-title">
                        <i class="fas fa-sliders-h"></i> Playback Controls
                    </div>
                </div>
                
                <div class="timeline-controls">
                    <button class="play-btn">
                        <i class="fas fa-play"></i>
                    </button>
                    <div class="timeline">
                        <div class="timeline-progress"></div>
                        <div class="timeline-handle"></div>
                    </div>
                    <div class="time-display">00:15 / 00:30</div>
                    <div class="playback-controls">
                        <button class="control-btn">
                            <i class="fas fa-step-backward"></i>
                        </button>
                        <button class="control-btn">
                            <i class="fas fa-step-forward"></i>
                        </button>
                        <button class="control-btn">
                            <i class="fas fa-redo"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right Panel - Parameters & Metrics -->
        <div class="params-panel">
            <div class="params-container">
                <div class="panel-header">
                    <div class="panel-title">
                        <i class="fas fa-sliders-h"></i> Effect Parameters
                    </div>
                    <div class="panel-actions">
                        <button class="panel-btn">
                            <i class="fas fa-undo"></i>
                        </button>
                        <button class="panel-btn">
                            <i class="fas fa-save"></i>
                        </button>
                    </div>
                </div>
                
                <div class="params-content">
                    <div class="param-group">
                        <div class="param-group-title">
                            <i class="fas fa-atom"></i> Particle Settings
                        </div>
                        
                        <div class="param-item">
                            <div class="param-header">
                                <div class="param-name">Particle Count</div>
                                <div class="param-value">250</div>
                            </div>
                            <input type="range" class="param-slider" min="10" max="1000" value="250">
                        </div>
                        
                        <div class="param-item">
                            <div class="param-header">
                                <div class="param-name">Particle Size</div>
                                <div class="param-value">3.5px</div>
                            </div>
                            <input type="range" class="param-slider" min="1" max="10" value="3.5" step="0.1">
                        </div>
                        
                        <div class="param-item">
                            <div class="param-header">
                                <div class="param-name">Speed</div>
                                <div class="param-value">0.8</div>
                            </div>
                            <input type="range" class="param-slider" min="0.1" max="2" value="0.8" step="0.1">
                        </div>
                    </div>
                    
                    <div class="param-group">
                        <div class="param-group-title">
                            <i class="fas fa-palette"></i> Visual Settings
                        </div>
                        
                        <div class="param-item">
                            <div class="param-header">
                                <div class="param-name">Color Scheme</div>
                            </div>
                            <div class="param-options">
                                <div class="param-option active">DNA Blue</div>
                                <div class="param-option">Neon Green</div>
                                <div class="param-option">Fire Red</div>
                                <div class="param-option">Purple Haze</div>
                            </div>
                        </div>
                        
                        <div class="param-item">
                            <div class="param-header">
                                <div class="param-name">Glow Intensity</div>
                                <div class="param-value">75%</div>
                            </div>
                            <input type="range" class="param-slider" min="0" max="100" value="75">
                        </div>
                        
                        <div class="param-item">
                            <div class="param-header">
                                <div class="param-name">Opacity</div>
                                <div class="param-value">90%</div>
                            </div>
                            <input type="range" class="param-slider" min="0" max="100" value="90">
                        </div>
                    </div>
                    
                    <div class="param-group">
                        <div class="param-group-title">
                            <i class="fas fa-cube"></i> 3D Settings
                        </div>
                        
                        <div class="param-item">
                            <div class="param-header">
                                <div class="param-name">Rotation Speed</div>
                                <div class="param-value">0.5</div>
                            </div>
                            <input type="range" class="param-slider" min="0" max="2" value="0.5" step="0.1">
                        </div>
                        
                        <div class="param-item">
                            <div class="param-header">
                                <div class="param-name">Perspective</div>
                                <div class="param-value">800px</div>
                            </div>
                            <input type="range" class="param-slider" min="200" max="2000" value="800" step="50">
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="metrics-container">
                <div class="panel-title">
                    <i class="fas fa-chart-line"></i> Performance Metrics
                </div>
                
                <div class="metrics-grid">
                    <div class="metric-card">
                        <div class="metric-card-header">
                            <div class="metric-card-title">FPS</div>
                            <div class="metric-card-icon">
                                <i class="fas fa-tachometer-alt" style="color: var(--success);"></i>
                            </div>
                        </div>
                        <div class="metric-card-value">
                            60<span class="metric-card-unit">fps</span>
                        </div>
                        <div class="metric-card-trend trend-up">
                            <i class="fas fa-arrow-up"></i>
                            <span>Stable</span>
                        </div>
                    </div>
                    
                    <div class="metric-card">
                        <div class="metric-card-header">
                            <div class="metric-card-title">CPU Usage</div>
                            <div class="metric-card-icon">
                                <i class="fas fa-microchip" style="color: var(--warning);"></i>
                            </div>
                        </div>
                        <div class="metric-card-value">
                            35<span class="metric-card-unit">%</span>
                        </div>
                        <div class="metric-card-trend trend-down">
                            <i class="fas fa-arrow-down"></i>
                            <span>Optimal</span>
                        </div>
                    </div>
                    
                    <div class="metric-card">
                        <div class="metric-card-header">
                            <div class="metric-card-title">Memory</div>
                            <div class="metric-card-icon">
                                <i class="fas fa-memory" style="color: var(--info);"></i>
                            </div>
                        </div>
                        <div class="metric-card-value">
                            45<span class="metric-card-unit">MB</span>
                        </div>
                        <div class="metric-card-trend trend-up">
                            <i class="fas fa-arrow-up"></i>
                            <span>+2MB</span>
                        </div>
                    </div>
                    
                    <div class="metric-card">
                        <div class="metric-card-header">
                            <div class="metric-card-title">Render Time</div>
                            <div class="metric-card-icon">
                                <i class="fas fa-clock" style="color: var(--primary);"></i>
                            </div>
                        </div>
                        <div class="metric-card-value">
                            16<span class="metric-card-unit">ms</span>
                        </div>
                        <div class="metric-card-trend trend-down">
                            <i class="fas fa-arrow-down"></i>
                            <span>Fast</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="export-panel">
                <div class="panel-title">
                    <i class="fas fa-file-export"></i> Export Options
                </div>
                
                <div class="export-options">
                    <button class="export-btn">
                        <i class="fas fa-camera"></i>
                        <span>Screenshot</span>
                    </button>
                    <button class="export-btn">
                        <i class="fas fa-video"></i>
                        <span>Video</span>
                    </button>
                    <button class="export-btn">
                        <i class="fas fa-file-code"></i>
                        <span>Code</span>
                    </button>
                    <button class="export-btn">
                        <i class="fas fa-chart-bar"></i>
                        <span>Report</span>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Create background particles
        const particlesContainer = document.getElementById('particles');
        const particleCount = 30;

        for (let i = 0; i < particleCount; i++) {
            const particle = document.createElement('div');
            particle.classList.add('particle');
            
            const size = Math.random() * 4 + 1;
            particle.style.width = `${size}px`;
            particle.style.height = `${size}px`;
            particle.style.left = `${Math.random() * 100}%`;
            particle.style.top = `${Math.random() * 100}%`;
            
            const duration = Math.random() * 20 + 15;
            particle.style.animationDuration = `${duration}s`;
            particle.style.animationDelay = `${Math.random() * 5}s`;
            
            const colors = ['#00d4ff', '#0066ff', '#ff00ff', '#00ff88'];
            particle.style.background = colors[Math.floor(Math.random() * colors.length)];
            
            particlesContainer.appendChild(particle);
        }

        // Canvas animation
        const canvas = document.getElementById('effectCanvas');
        const ctx = canvas.getContext('2d');
        
        // DNA Particle System
        class Particle {
            constructor(x, y) {
                this.x = x;
                this.y = y;
                this.size = Math.random() * 3 + 1;
                this.speedX = Math.random() * 2 - 1;
                this.speedY = Math.random() * 2 - 1;
                this.color = `rgba(0, 212, 255, ${Math.random() * 0.5 + 0.5})`;
                this.angle = Math.random() * Math.PI * 2;
                this.angleSpeed = Math.random() * 0.02 + 0.01;
                this.distance = Math.random() * 100 + 50;
            }
            
            update() {
                this.angle += this.angleSpeed;
                this.x = canvas.width / 2 + Math.cos(this.angle) * this.distance;
                this.y = canvas.height / 2 + Math.sin(this.angle * 2) * this.distance / 2;
            }
            
            draw() {
                ctx.fillStyle = this.color;
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                ctx.fill();
                
                // Glow effect
                ctx.shadowBlur = 10;
                ctx.shadowColor = this.color;
                ctx.fill();
                ctx.shadowBlur = 0;
            }
        }
        
        const particles = [];
        for (let i = 0; i < 250; i++) {
            particles.push(new Particle(canvas.width / 2, canvas.height / 2));
        }
        
        function animate() {
            ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            particles.forEach(particle => {
                particle.update();
                particle.draw();
            });
            
            // Draw connections
            particles.forEach((p1, i) => {
                particles.slice(i + 1).forEach(p2 => {
                    const distance = Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);
                    if (distance < 50) {
                        ctx.strokeStyle = `rgba(0, 212, 255, ${0.2 * (1 - distance / 50)})`;
                        ctx.lineWidth = 0.5;
                        ctx.beginPath();
                        ctx.moveTo(p1.x, p1.y);
                        ctx.lineTo(p2.x, p2.y);
                        ctx.stroke();
                    }
                });
            });
            
            requestAnimationFrame(animate);
        }
        
        animate();
        
        // Parameter sliders
        const sliders = document.querySelectorAll('.param-slider');
        sliders.forEach(slider => {
            slider.addEventListener('input', (e) => {
                const value = e.target.value;
                const valueDisplay = e.target.parentElement.querySelector('.param-value');
                if (valueDisplay) {
                    if (e.target.step && e.target.step.includes('.')) {
                        valueDisplay.textContent = parseFloat(value).toFixed(1);
                    } else {
                        valueDisplay.textContent = value;
                    }
                }
            });
        });
        
        // Play button
        const playBtn = document.querySelector('.play-btn');
        let isPlaying = false;
        
        playBtn.addEventListener('click', () => {
            isPlaying = !isPlaying;
            playBtn.innerHTML = isPlaying ? '<i class="fas fa-pause"></i>' : '<i class="fas fa-play"></i>';
        });
        
        // Timeline interaction
        const timeline = document.querySelector('.timeline');
        const timelineProgress = document.querySelector('.timeline-progress');
        const timelineHandle = document.querySelector('.timeline-handle');
        
        let isDragging = false;
        
        timeline.addEventListener('mousedown', (e) => {
            isDragging = true;
            updateTimeline(e);
        });
        
        document.addEventListener('mousemove', (e) => {
            if (isDragging) {
                updateTimeline(e);
            }
        });
        
        document.addEventListener('mouseup', () => {
            isDragging = false;
        });
        
        function updateTimeline(e) {
            const rect = timeline.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100));
            
            timelineProgress.style.width = `${percentage}%`;
            timelineHandle.style.left = `${percentage}%`;
        }
        
        // Effect items
        const effectItems = document.querySelectorAll('.effect-item');
        effectItems.forEach(item => {
            item.addEventListener('click', () => {
                effectItems.forEach(i => i.classList.remove('active'));
                item.classList.add('active');
            });
        });
        
        // Parameter options
        const paramOptions = document.querySelectorAll('.param-option');
        paramOptions.forEach(option => {
            option.addEventListener('click', () => {
                const siblings = option.parentElement.querySelectorAll('.param-option');
                siblings.forEach(s => s.classList.remove('active'));
                option.classList.add('active');
            });
        });
    </script>
</body>
</html>